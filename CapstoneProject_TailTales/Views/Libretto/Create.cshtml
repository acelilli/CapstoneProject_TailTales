@model CapstoneProject_TailTales.Models.Libretto
@Styles.Render("~/Content/FormStyle.css")
@{
    ViewBag.Title = "Crea Libretto";
    ViewBag.Error = "Errore di inserimento nel database";
}

<main class="container-fluid overflow-y-visible">
    <div class="d-flex justify-content-center background-container">
        <div id="gradient-bg"></div>
        <div id="myform-card">
            <h3 class="sedan-regular">Aggiungi un libretto:</h3>
            <div class="form-group row">
                <hr />
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

            <div class="row">
                <div class=" col-md-6 border-0 ">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group ">
                        @Html.HiddenFor(model => model.IdPet_FK)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NumMicrochip, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.NumMicrochip, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumMicrochip, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Proprietario, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.Proprietario, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Proprietario, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Indirizzo, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Indirizzo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Indirizzo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class=" col-md-6 border-0 mt-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Provenienza, htmlAttributes: new { @class = "control-label"})
                        <div>
                            @Html.EditorFor(model => model.Provenienza, new { htmlAttributes = new { @class = "form-control", @placeholder="Allevamento, altro..." } })
                            @Html.ValidationMessageFor(model => model.Provenienza, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NumEnci, "Numero Enci", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.NumEnci, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumEnci, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Sterilizzato, "Sterilizzato?", htmlAttributes: new { @class = "control-label" })
                        <div>
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Sterilizzato)
                                @Html.ValidationMessageFor(model => model.Sterilizzato, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
                <section class="d-flex justify-content-between my-1">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn bg-lightblue" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <a href="@Url.Action("Index", "Home")" class="btn bg-dark-grey">Homepage</a>
                        </div>
                    </div>
                </section>
            }
            </div>
        </div>
        </div>
    </main>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }