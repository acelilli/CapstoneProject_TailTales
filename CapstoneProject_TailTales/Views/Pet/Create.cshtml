@model CapstoneProject_TailTales.Models.Pet
@Styles.Render("~/Content/FormStyle.css")
@{
    ViewBag.Title = "Crea Pet";
    var specie = ViewData["Specie"] as List<string>;
    var razzePerSpecie = ViewData["RazzePerSpecie"] as Dictionary<string, List<string>>;
}

<main class="container-fluid overflow-y-visible">
    <div class="d-flex justify-content-center background-container">
        <div id="gradient-bg"></div>
        <div id="myform-card">
            <h3 class="sedan-regular text-center">Registrazione nuovo pet:</h3>
            <div class="form-group row">
                <hr />
                @using (Html.BeginForm("Create", "Pet", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form-data" }))
                {
                    @Html.AntiForgeryToken()

            <div class="row">
                <div class=" col-md-6 border-0">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @if (User.IsInRole("admin"))
                    {
                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.IdUtente_FK, "IdUtente_FK", htmlAttributes: new { @class = "control-label my-1" })
                            <div>
                                @Html.DropDownList("IdUtente_FK", ViewBag.IdUtente_FK as SelectList, htmlAttributes: new { @class = "form-control", @id = "IdUtente_FK" })
                                @Html.ValidationMessageFor(model => model.IdUtente_FK, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Tipo, "Specie", htmlAttributes: new { @class = "control-label my-1" })
                        <div>
                            @Html.DropDownListFor(model => model.Tipo, new SelectList(specie), "Seleziona Specie", new { @class = "form-control", @id = "Tipo" })
                            @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Razza, htmlAttributes: new { @class = "control-label my-1" })
                        <div>
                            @Html.DropDownListFor(model => model.Razza, new SelectList(new List<string>()), "Seleziona Razza", new { @class = "form-control", @id = "Razza" })
                            @Html.ValidationMessageFor(model => model.Razza, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label my-1" })
                        <div>
                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @id = "Nome" } })
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-12">
                        <div class="col-md-offset-2">
                            <input type="submit" value="Save" class="btn bg-lightblue" />
                        </div>
                    </div>
                </div>
                <div class=" col-md-6 border-0">
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Sesso, htmlAttributes: new { @class = "control-label my-1" })
                        <div>
                            @foreach (var genere in CapstoneProject_TailTales.Models.Pet.Generi)
                            {
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.Sesso, genere, new { id = "Sesso_" + genere }) @genere
                                </label>
                            }
                            @Html.ValidationMessageFor(model => model.Sesso, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-12 pt-1 mb-0">
                        @Html.LabelFor(model => model.DataNascita, "Data di nascita", htmlAttributes: new { @class = "control-label my-1" })
                        <div>
                            @Html.EditorFor(model => model.DataNascita, "gg-mm-yyyy", new { htmlAttributes = new { @class = "form-control", @id = "DataNascita" } })
                            @Html.ValidationMessageFor(model => model.DataNascita, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-12 pt-1">
                        @Html.LabelFor(model => model.ImgProfilo, "Immagine Profilo", htmlAttributes: new { @class = "control-label my-1" })
                        <div>
                            @Html.TextBoxFor(model => model.ImgProfilo, new { type = "file", @id = "ImgProfilo", accept = ".jpg, .jpeg, .png" })
                            @Html.ValidationMessageFor(model => model.ImgProfilo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-12">
                        <div class="col-md-offset-2">
                            <a href="@Url.Action("Index", "Home")" class="btn bg-dark-grey">Homepage</a>
                        </div>
                    </div>
                </div>
            </div>
                    <section class="d-flex justify-content-between my-1">
                        
                        
                    </section>
                }
            </div>
            </div>
        </div>
</main>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <!--Tramite questo script, collegandoci alla sezione Razze cercherà nel json tutte le razze appartenenti alle specie-->
    <script>
        $(document).ready(function () {
            $('#Tipo').change(function () {
              var specie = $(this).val();
              var razzePerSpecie = @Html.Raw(Json.Encode(razzePerSpecie));


                $('#Razza').empty();
                $.each(razzePerSpecie[specie], function (index, value) {
                    $('#Razza').append($('<option>').text(value).attr('value', value));
                });
            });
        });
    </script>
}